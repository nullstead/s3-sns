AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  S3 upload notification service using AWS Lambda and SNS

# Global parameters
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name (dev or prod)
  
  AdminEmail:
    Type: String
    Description: Email address to receive notifications
    Default: nullstead@gmail.com

# Global variables
Globals:
  Function:
    Timeout: 10
    Runtime: nodejs22.x
    MemorySize: 128
    Architectures:
      - x86_64

Resources:
  # S3 bucket for file uploads (that will trigger notifications)
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'file-upload-notifications-${Environment}-${AWS::AccountId}'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt NotificationFunction.Arn

  # Lambda invoke permission from S3
  S3InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NotificationFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt UploadBucket.Arn

  # SNS Topic for notifications
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'file-upload-notifications-${Environment}'
      DisplayName: 'S3 Upload Notifications'

  # SNS Subscription for email
  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref NotificationTopic
      Endpoint: !Ref AdminEmail

  # Lambda function to process S3 events
  NotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: index.handler
      Description: Processes S3 upload events and sends notifications via SNS
      Environment:
        Variables:
          TOPIC_ARN: !Ref NotificationTopic
          ENVIRONMENT: !Ref Environment
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt NotificationTopic.TopicName
        - S3ReadPolicy:
            BucketName: !Ref UploadBucket

Outputs:
  UploadBucketName:
    Description: Name of the S3 bucket for file uploads
    Value: !Ref UploadBucket
  
  NotificationTopicARN:
    Description: ARN of the SNS topic for notifications
    Value: !Ref NotificationTopic
  
  NotificationFunctionName:
    Description: Name of the Lambda function
    Value: !Ref NotificationFunction