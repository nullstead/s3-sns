name: Deploy SAM Application

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set environment based on branch or manual input
        id: set-environment
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENVIRONMENT="${{ github.event.inputs.environment }}"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            ENVIRONMENT="prod"
          else
            ENVIRONMENT="dev"
          fi
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      
      - name: Install dependencies for Lambda
        run: |
          cd src
          npm install
      
      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: SAM Build
        run: sam build
      
      - name: Get deployment parameters for environment
        id: params
        run: |
          if [ "${{ env.ENVIRONMENT }}" == "prod" ]; then
            EMAIL="${{ secrets.PROD_EMAIL_SUBSCRIPTION }}"
          else
            EMAIL="${{ secrets.DEV_EMAIL_SUBSCRIPTION }}"
          fi
          echo "email=$EMAIL" >> $GITHUB_OUTPUT
      
      - name: SAM Deploy
        run: |
          sam deploy \
            --stack-name file-upload-notification-${{ env.ENVIRONMENT }} \
            --no-fail-on-empty-changeset \
            --no-confirm-changeset \
            --parameter-overrides \
              Environment=${{ env.ENVIRONMENT }} \
              EmailSubscription=${{ steps.params.outputs.email }}
      
      - name: Deployment summary
        run: |
          echo "Deployed to ${{ env.ENVIRONMENT }} environment successfully"
          echo "Stack name: file-upload-notification-${{ env.ENVIRONMENT }}"